// Mocks generated by Mockito 5.4.0 from annotations
// in game_list/test/home/widgets/all_games_widget/bloc/all_games_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fpdart/fpdart.dart' as _i2;
import 'package:game_list/models/game.dart' as _i5;
import 'package:game_list/models/genre.dart' as _i6;
import 'package:game_list/models/result.dart' as _i7;
import 'package:game_list/repository/game_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GameRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGameRepository extends _i1.Mock implements _i3.GameRepository {
  @override
  _i4.Future<_i2.Either<Exception, _i5.Game>> getGames() => (super.noSuchMethod(
        Invocation.method(
          #getGames,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<Exception, _i5.Game>>.value(
            _FakeEither_0<Exception, _i5.Game>(
          this,
          Invocation.method(
            #getGames,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<Exception, _i5.Game>>.value(
                _FakeEither_0<Exception, _i5.Game>(
          this,
          Invocation.method(
            #getGames,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<Exception, _i5.Game>>);
  @override
  _i4.Future<_i2.Either<Exception, List<_i6.Genre>>> getGenres() =>
      (super.noSuchMethod(
        Invocation.method(
          #getGenres,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<Exception, List<_i6.Genre>>>.value(
            _FakeEither_0<Exception, List<_i6.Genre>>(
          this,
          Invocation.method(
            #getGenres,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<Exception, List<_i6.Genre>>>.value(
                _FakeEither_0<Exception, List<_i6.Genre>>(
          this,
          Invocation.method(
            #getGenres,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<Exception, List<_i6.Genre>>>);
  @override
  _i4.Future<_i2.Either<Exception, List<_i7.Result>>> getGamesByGenre(
          int? genreId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGamesByGenre,
          [genreId],
        ),
        returnValue: _i4.Future<_i2.Either<Exception, List<_i7.Result>>>.value(
            _FakeEither_0<Exception, List<_i7.Result>>(
          this,
          Invocation.method(
            #getGamesByGenre,
            [genreId],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.Either<Exception, List<_i7.Result>>>.value(
                _FakeEither_0<Exception, List<_i7.Result>>(
          this,
          Invocation.method(
            #getGamesByGenre,
            [genreId],
          ),
        )),
      ) as _i4.Future<_i2.Either<Exception, List<_i7.Result>>>);
}

/// A class which mocks [Game].
///
/// See the documentation for Mockito's code generation for more information.
class MockGame extends _i1.Mock implements _i5.Game {
  @override
  List<_i7.Result> get results => (super.noSuchMethod(
        Invocation.getter(#results),
        returnValue: <_i7.Result>[],
        returnValueForMissingStub: <_i7.Result>[],
      ) as List<_i7.Result>);
}
